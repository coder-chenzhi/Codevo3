color=transmission, shape=transmission,
geom=c("point", "smooth"),
method="lm", formula=y~x,
xlab="Weight", ylab="Miles Per Gallon",
main="Regression Example")
qplot(wt,mpg, data=mtcars, method="lm", formula=y~x, xlab="Weight", ylab="Miles Per Gallon",main="Regression Example")
qplot(wt,mpg, data=mtcars, methogeom=c("point", "smooth"),d="lm", formula=y~x, xlab="Weight", ylab="Miles Per Gallon",main="Regression Example")
qplot(wt,mpg, data=mtcars, geom=c("point", "smooth"), method="lm", formula=y~x, xlab="Weight", ylab="Miles Per Gallon",main="Regression Example")
qplot(wt,mpg, data=mtcars, geom=c(smooth"), method="lm", formula=y~x, xlab="Weight", ylab="Miles Per Gallon",main="Regression Example")
qplot(wt,mpg, data=mtcars, geom=c("smooth"), method="lm", formula=y~x, xlab="Weight", ylab="Miles Per Gallon",main="Regression Example")
library(ggplot2)
qplot(wt,mpg, data=mtcars, geom=c("smooth"), method="lm", formula=y~x, xlab="Weight", ylab="Miles Per Gallon",main="Regression Example")
qplot(wt,mpg, data=mtcars, geom=c("smooth", "point"), method="lm", formula=y~x, xlab="Weight", ylab="Miles Per Gallon",main="Regression Example")
?lm
qplot(wt,mpg, data=mtcars, geom=c("smooth", "point"), method="lm", formula=y~x, xlab="Weight", ylab="Miles Per Gallon",main="Regression Example", color=transmission)
transmission <- factor(mtcars$am, levels=c(0, 1),
labels=c("Automatic", "Manual"))
qplot(wt,mpg, data=mtcars, geom=c("smooth", "point"), method="lm", formula=y~x, xlab="Weight", ylab="Miles Per Gallon",main="Regression Example", color=transmission)
cylinder <- as.factor(mtcars$cyl)
qplot(cylinder, mpg, data=mtcars, geom=c('boxplot', 'jitter'), fill=cylinder, main='box plots with superimposed data points', xlab='number of cylinders', ylab='miles per gallon')
cylind <- as.factor(mtcars$cyl)
qplot(cylind, mpg, data=mtcars, geom=c('boxplot', 'jitter'), fill=cylinder, main='box plots with superimposed data points', xlab='number of cylinders', ylab='miles per gallon')
qplot(cylind, mpg, data=mtcars, geom=c('boxplot', 'point'), fill=cylinder, main='box plots with superimposed data points', xlab='number of cylinders', ylab='miles per gallon')
cyl <- factor(mtcars$cyl, levels=c(4, 6, 8),
labels=c("4 cylinders", "6 cylinders", "8 cylinders"))
factor(mtcars$am, levels=c(0, 1),
labels=c("Automatic", "Manual"))
transmission <- factor(mtcars$am, levels=c(0, 1),
labels=c("Automatic", "Manual"))
qplot(wt,mpg, data=mtcars, facets=am~cyl, size=hp)
mtcar$am <- factor(mtcars$am, levels=c(0, 1),
labels=c("Automatic", "Manual"))
mtcars$am <- factor(mtcars$am, levels=c(0, 1),
labels=c("Automatic", "Manual"))
mtcars$cyl <- factor(mtcars$cyl, levels=c(4, 6, 8),
labels=c("4 cylinders", "6 cylinders", "8 cylinders"))
qplot(wt,mpg, data=mtcars, facets=am~cyl, size=hp)
data(singer, package="lattice")
qplot(height, data=singer, geom=c("density"),
facets=voice.part~., fill=voice.part)
qplot(height, data=singer, geom=c("density"),
facets=.~voice.part, fill=voice.part)
qplot(disp,mpg,data=mtcars,col= as.factor(cyl))
qplot(disp,mpg,data=mtcars,col= cyl)
qplot(disp,mpg,data=mtcars,col= as.factor(cyl))
qplot(disp,mpg,data=mtcars,col= cyl)
qplot(disp,mpg,data=mtcars,shape=cyl)
qplot(disp,mpg,data=mtcars,size=cyl)
.libPaths()
install.packages(c("ggplot2", "data.table", "RMongo"))
install.packages("rmongodb")
library(rmongodb)
mongo <- mongo.create(db='evolution')
references <- mongo.find.one(mongo, 'evolution.references', '{_id: "c07b777533cdbdfe4042258dbf44f2d9d51e3bc0"}')
references <- mongo.find.one(mongo, 'evolution.references', '{"_id": "c07b777533cdbdfe4042258dbf44f2d9d51e3bc0"}')
names(references)
class(references)
references
load("~/Code/Python3/Codevo3/analysis.R")
setwd("~/Code/Python3/Codevo3")
df <- read.csv('classes.csv')
source('/mnt/Home/KuaiPan/Research/EvolutionSimulation/analysis/plot.ccdf.R')
plot.ccdf(df$lines)
plot.ccdf(df$subclasses)
plot.ccdf(df$lines)
df <- read.csv('output/classes.csv')
plot.ccdf(df$subclasses)
plot.ccdf(df$lines)
source('~/Code/Python3/Codevo3/analysis.R')
?readLines
df <- file('.gitignore', 'r')
readLines(df, n=7)
readLines(df, n=1)
df <- file('.gitignore', 'r')
readLines(df, n=1)
readLines(df, n=1) == NULL
is.character(readLines(df, n=1))
length(readLines(df, n=1))
length("")
length("a")
min_fitness <- get_min_fitness(100000)
source('~/Code/Python3/Codevo3/analysis.R')
min_fitness <- get_min_fitness(100000)
names(min_fitness)
library(ggplot2)
qplot(step, fitness, data=min_fitness)
expression('title'^2)
qplot(step, fitness, data=min_fitness, ylab=expression('f'[2]))
qplot(step, fitness, data=min_fitness, ylab=expression('f'['min']'(S)'))
?expression
qplot(step, fitness, data=min_fitness, ylab=expression('hi'[5]*'there'[6]^8*'you'[2]))
qplot(step, fitness, data=min_fitness, ylab=expression('f'['min']*'(S)'))
qplot(step, fitness, data=min_fitness, ylab=expression('f'['min']*'(S)'), xlab='S')
source('~/Code/Python3/Codevo3/analysis.R')
steps <- fread('~/steps.csv')
qplot(1:nrow(steps), min_fitness, data=steps)
max(steps[200000:400000])
max(steps[200000:400000]$min_fitness)
max(steps[400000:600000]$min_fitness)
max(steps[600000:800000]$min_fitness)
max(steps[800000:1000000]$min_fitness)
?lm
ctl <- c(4.17,5.58,5.18,6.11,4.50,4.61,5.17,4.53,5.33,5.14)
trt <- c(4.81,4.17,4.41,3.59,5.87,3.83,6.03,4.89,4.32,4.69)
group <- gl(2, 10, 20, labels = c("Ctl","Trt"))
weight <- c(ctl, trt)
lm(weight ~ group)
source('E:/Development/Python3/Codevo3/analysis.R')
steps <- fread('output/steps')
pwd()
?fread
steps <- fread('output\steps')
steps <- fread('output\\steps')
steps <- fread('./output/steps')
steps <- fread("output/steps")
setwd("E:/Development/Python3/Codevo3/output")
steps <- fread("steps")
steps <- fread("output/steps.csv")
steps <- fread("steps.csv")
steps <- fread("file://steps.csv")
qplot(1:nrow(steps), min_fitness, data=steps)
methods <- fread('references.csv')
methods <- fread('file://references.csv')
ggplot.ccdf(methods$ref_count)
ggplot.ccdf(methods$ref_count+1)
class <- fread('file://class.csv')
class <- fread('file://classes.csv')
classes <- fread('file://classes.csv')
remove(class)
ggplot.ccdf(classes$subclasses)
ggplot.ccdf(classes$subclasses+1)
ggplot.ccdf(classes$lines)
qplot(1:nrow(steps), min_fitness, data=steps)
max(steps[40000:10000]$min_fitness)
max(steps[50000:10000]$min_fitness)
max(steps[50000:100000]$min_fitness)
max(steps[40000:100000]$min_fitness)
max(steps[75000:100000]$min_fitness)
source('E:/Development/Python3/Codevo3/analysis.R')
steps <- fread('output/steps.csv')
qplot(1:nrow(steps), min_fitness, data=steps)
max(steps[50000:10000]$min_fitness)
?stat_function
x <- rnorm(100)
base <- qplot(x, geom = "density")
base + stat_function(fun = dnorm, colour = "red")
qplot(1:10000, stat='function', geom='line', fun=function(x) 1-1/x)
qplot(0:10000, stat='function', geom='line', fun=function(x) 1/(1+x))
qplot(0:100, stat='function', geom='line', fun=function(x) 1/(1+x))
qplot(0:100, stat='function', geom='line', fun=function(x) 1-x/(1+x))
qplot(0:100, stat='function', geom='line', fun=function(x) 1-x/(10+x))
library(data.table)
references <- fread('output/references.csv')
max(references$ref_count)
references <- fread('output/references.csv')
max(references$ref_count)
library(data.table)
clustering <- fread('output/clustering.csv')
clustering
library(ggplot2)
qplot(degree, average_cc, data=clustering)
max(clustering$degree)
qplot(degree, average_cc, data=clustering) + scale_x_log10() + scale_y_log10()
clustering <- fread('output/clustering.csv')
max(clustering$degree)
qplot(degree, average_cc, data=clustering) + scale_x_log10() + scale_y_log10()
library("data.table", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
clustering <- fread('output/clustering.csv')
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
qplot(degree, average_cc, data=clustering)
qplot(degree, average_cc, data=clustering) + scale_x_log10() + scale_y_log10()
qplot(degree, average_cc, data=clustering[2:168]) + scale_x_log10() + scale_y_log10()
qplot(degree, average_cc, data=clustering[2:168])
qplot(degree, average_cc, data=clustering[2:168]) + scale_x_log10() + scale_y_log10()
install.packages(c("colorspace", "jsonlite", "manipulate"))
install.packages(c("digest", "Formula", "httr", "RCurl", "reshape2", "R.matlab", "R.oo", "VGAM"))
install.packages(c("codetools", "spatial"), lib="/usr/lib/R/library")
source('~/Code/Python3/Codevo3/analysis.R')
clustering <- fread('output/clustering.csv')
qplot(degree, average_cc, data=clustering)
source('~/Code/Python3/Codevo3/analysis.R')
clustering <- fread('output/clustering.csv')
qplot(degree, average_cc, data=clustering)
qplot(degree, average_cc, data=clustering) + scale_x_log10() + scale_y_log10()
qplot(degree, average_cc, data=clustering[degree>1]) + scale_x_log10() + scale_y_log10()
source('~/Code/Python3/Codevo3/analysis.R')
library(data.table)
install.packages(c("data.table", "ggplot2"))
source('~/Code/Python3/Codevo3/analysis.R')
steps <- fread('output/steps.csv')
qplot(1:nrow(steps), min_fitness, data=steps)
max(steps[30000:200000]$min_fitness)
max(steps[20000:200000]$min_fitness)
max(steps[25000:200000]$min_fitness)
qplot(1:30000, min_fitness, data=steps[1:30000])
max(steps[5000:10000]$min_fitness)
qplot(1:nrow(steps), min_fitness, data=steps)
commit_sizes <- get_commit_sizes(steps, 0.786)
ggplot.ccdf(commit_sizes)
classes <- fread('output/classes.csv')
steps <- fread('output/steps.csv')
qplot(1:nrow(steps), min_fitness, data=steps)
qplot(1:20000, min_fitness, data=steps[1:20000])
qplot(20000:40000, min_fitness, data=steps[20000:40000])
qplot(40000:80000, min_fitness, data=steps[40000:80000])
commit_sizes <- get_commit_sizes(steps, 0.785)
ggplot.ccdf(commit_sizes)
qplot(1:nrow(steps), min_fitness, data=steps)
max(steps[30000:200000]$min_fitness)
commit_sizes <- get_commit_sizes(steps, 0.774)
qplot(1:nrow(steps), min_fitness, data=steps)
ggplot.ccdf(commit_sizes)
commit_sizes <- get_commit_sizes(steps, 0.77)
ggplot.ccdf(commit_sizes)
commit_sizes <- get_commit_sizes(steps, 0.76)
ggplot.ccdf(commit_sizes)
source('E:/Development/Python3/Codevo3/analysis.R')
library("ggplot2", lib.loc="~/R/win-library/3.2")
install.packages(c("chron", "knitr", "manipulate", "MASS", "plyr", "Rcpp", "rmarkdown", "scales", "stringr", "VGAM"))
commits <- fread('output/commits.csv')
ggplot.ccdf(commits$change_size)
qplot(change_size, data=commits)
commits <- fread('output/commits.csv')
qplot(change_size, data=commits)
ggplot.ccdf(commits$change_size)
qplot(change_size, data=commits)
classes <- fread('output/classes.csv')
qplot <- fread('output/classes.csv')
classes <- fread('output/classes.csv')
source('E:/Development/Python3/Codevo3/analysis.R')
remove(qplot)
qplot(subclasses, data=classes)
qplot(lines, data=classes)
ggplot.ccdf(classes$lines)
ggplot.ccdf(classes$subclasses)
methods <- fread('output/methods.csv')
ggplot.ccdf(methods$ref_count)
qplot(1:nrow(commits), min_fitness, data=commits)
commits <- fread('output/commits.csv')
qplot(change_size, data=commits)
ggplot.ccdf(commits$change_size)
qplot(1:nrow(commits), min_fitness, data=commits)
ggplot.ccdf(commits$change_size)
commits <- fread('output/commits.csv')
ggplot.ccdf(commits$change_size)
commits <- fread('output/commits.csv')
ggplot.ccdf(commits$change_size)
commits <- fread('output/commits.csv')
ggplot.ccdf(commits$change_size)
library(poweRlaw)
commit_size_pl <- displ$new(commits$change_size)
est <- estimate_xmin(commit_size_pl)
commit_size_pl$setXmin(est$xmin)
commit_size_pl$setPars(est$pars)
bs <- bootstrap_p(commit_size_pl, threads = 3)
bs$p
bs
commits <- fread('output/commits.csv')
ggplot.ccdf(commits$change_size)
qplot(change_size, data=commits)
ggplot.ccdf(commits$change_size)
commit_size_pl <- displ$new(commits$change_size)
est <- estimate_xmin(commit_size_pl)
commit_size_pl$setXmin(est$xmin)
commit_size_pl$setPars(est$pars)
bs <- bootstrap_p(commit_size_pl, threads = 3)
library(ggplot2)
library("ggplot2", lib.loc="~/R/win-library/3.2")
install.packages("plyr")
library("ggplot2", lib.loc="~/R/win-library/3.2")
commits <- fread('output/commits.csv')
source('E:/Development/Python3/Codevo3/analysis.R')
library(data.table)
install.packages("data.table")
library(data.table)
commits <- fread('output/commits.csv')
ggplot.ccdf(commits$change_size)
library(ggplot2)
ggplot.ccdf(commits$change_size)
library(poweRlaw)
commit_size_pl <- displ$new(commits$change_size)
est <- estimate_xmin(commit_size_pl)
commit_size_pl$setXmin(est$xmin)
commit_size_pl$setPars(est$pars)
bs <- bootstrap_p(commit_size_pl, threads = 3)
sessionInfo()
commits <- fread('output/commits.csv')
ggplot.ccdf(commits$change_size)
commit_size_pl <- displ$new(commits$change_size)
est <- estimate_xmin(commit_size_pl)
source('E:/Development/Python3/Codevo3/analysis.R')
commits <- fread('output/commits.csv')
ggplot.ccdf(commits$change_size)
commit_size_pl <- displ$new(commits$change_size)
library("poweRlaw", lib.loc="~/R/win-library/3.2")
commit_size_pl <- displ$new(commits$change_size)
est <- estimate_xmin(commit_size_pl)
commits <- fread('output/commits.csv')
ggplot.ccdf(commits$change_size)
qplot(change_size, data=commits, stat='qq')
qplot(sample=change_size, data=commits, stat='qq')
qplot(sample=log(change_size), data=commits, stat='qq')
qplot(sample=change_size, data=commits, stat='qq')
qplot(sample=log(change_size), data=commits, stat='qq')
qplot(change_size, data=commits)
qplot(log(change_size), data=commits)
qplot(change_size, data=commits)
qplot(change_size, data=commits, binwidth=2)
summary(commits$change_size)
commits <- fread('output/commits.csv')
qplot(change_size, data=commits)
summary(commits$change_size)
commits <- fread('output/commits.csv')
qplot(change_size, data=commits)
summary(commits$change_size)
ggplot.ccdf(commits$change_size)
commits <- fread('output/commits.csv')
commit_size_pl <- displ$new(commits$change_size)
est <- estimate_xmin(commit_size_pl)
commit_size_pl$setXmin(est$xmin)
commit_size_pl$setPars(est$pars)
commit_size_pl$xmin <- est$xmin
bs <- bootstrap_p(commit_size_pl, threads = 3)
bs
ggplot.ccdf(commits$change_size)
ggplot.ccdf(commits$change_size, xbreaks=c(1,2,4,8,16,32,64))
commit_size_pl$xmin <- 64
est <- estimate_pars(commit_size_pl)
commit_size_pl$pars <- est$pars
bs <- bootstrap_p(commit_size_pl, threads = 3)
commits <- fread('output/commits.csv')
ggplot.ccdf(commits$change_size)
ggplot.ccdf(commits$change_size, xbreaks=c(1,2,4,8,16,32,64))
summary(commits$change_size)
classes <- fread('output/classes.csv')
summary(classes$lines)
commits <- fread('output/commits.csv')
ggplot.ccdf(commits$change_size)
commits <- fread('output/commits.csv')
commit_size_pl <- displ$new(commits$change_size)
est <- estimate_xmin(commit_size_pl)
bs <- bootstrap_p(commit_size_pl, threads = 3)
commits <- fread('output/commits.csv')
ggplot.ccdf(commits$change_size)
commit_size_pl <- displ$new(commits$change_size)
est <- estimate_xmin(commit_size_pl)
commits <- fread('output/commits.csv')
commit_size_pl$xmin = est$xmin
commit_size_pl$pars = est$pars
bs <- bootstrap_p(commit_size_pl, threads = 2)
commits <- fread('output/commits.csv')
ggplot.ccdf(commits$change_size)
commit_size_pl <- displ$new(commits$change_size)
est <- estimate_xmin(commit_size_pl)
commit_size_pl$pars = est$pars
commit_size_pl$xmin = est$xmin
bs <- bootstrap_p(commit_size_pl, threads = 3)
commits <- fread('output/commits.csv')
ggplot.ccdf(commits$change_size)
est <- estimate_xmin(commit_size_pl)
commit_size_pl$xmin = est$xmin
commit_size_pl$pars = est$pars
bs <- bootstrap_p(commit_size_pl, threads = 3)
bs$p
remove(x)
remove(trt)
remove(group)
remove(weight)
remove(ctl)
remove(df)
source('~/Code/Python3/Codevo3/analysis.R')
classes <- fread('output/classes.csv')
methods <- fread('output/methods.csv')
ggplot.ccdf(methods$ref_count)
ggplot.ccdf(methods$ref_count+1)
library(poweRlaw)
ref_pl <- displ$new(methods$ref_count)
ref_pl <- displ$new(methods$ref_count+1)
est <- estimate_xmin(ref_pl)
ref_pl$xmin <- est
bs <- bootstrap_p(ref_pl, threads = 3)
ref_pl$xmin <- 10
ref_pl$pars <- estimate_pars(ref_pl)
bs <- bootstrap_p(ref_pl, threads = 3)
methods <- fread('output/methods.csv')
ggplot.ccdf(methods$ref_count+1)
ref_pl <- displ$new(methods$ref_count+1)
est <- estimate_xmin(ref_pl)
ref_pl$xmin <- est
bs <- bootstrap_p(ref_pl, threads = 3)
commits <- fread('output/commits.csv')
ggplot.ccdf(commits$change_size)
commit_size_pl <- displ$new(commits$change_size)
est <- estimate_xmin(commit_size_pl)
commit_size_pl$xmin <- est
bs <- bootstrap_p(commit_size_pl)
commits <- fread('output/commits.csv')
ggplot.ccdf(commits$change_size)
commit_size_pl <- displ$new(commits$change_size)
est <- estimate_xmin(commit_size_pl)
commit_size_pl$xmin <- est
bs <- bootstrap_p(commit_size_pl)
bs <- bootstrap_p(commit_size_pl, threads = 3)
commits <- fread('output/commits.csv')
source('~/Code/Python3/Codevo3/analysis.R')
commits <- fread('output/commits.csv')
ggplot.ccdf(commits$change_size)
commit_size_pl <- displ$new(commits$change_size)
library(poweRlaw)
commit_size_pl <- displ$new(commits$change_size)
est <- estimate_xmin(commit_size_pl)
commit_size_pl$xmin <- est
bs <- bootstrap_p(commit_size_pl, threads = 3)
commits <- fread('output/commits.csv')
commit_size_pl <- displ$new(commits$change_size)
est <- estimate_xmin(commit_size_pl)
commit_size_pl$xmin <- est
bs <- bootstrap_p(commit_size_pl, threads = 2)
methods <- fread('output/methods.csv')
ggplot.ccdf(methods$ref_count+1)
ref_pl <- displ$new(methods$ref_count+1)
est <- estimate_xmin(ref_pl)
ref_pl$xmin <- est
bs <- bootstrap_p(ref_pl, threads = 3)
commits <- fread('output/commits.csv')
commit_size_pl <- displ$new(commits$change_size)
est <- estimate_xmin(commit_size_pl)
commit_size_pl$xmin <- est
ggplot.ccdf(commits$change_size)
bs <- bootstrap_p(commit_size_pl, threads = 3)
commits <- fread('output/commits.csv')
commit_size_pl <- displ$new(commits$change_size)
est <- estimate_xmin(commit_size_pl)
ggplot.ccdf(commits$change_size)
commit_size_pl$xmin <- est
bs <- bootstrap_p(commit_size_pl, threads = 3)
methods <- fread('output/methods.csv')
ggplot.ccdf(methods$ref_count+1)
ref_pl <- displ$new(methods$ref_count+1)
est <- estimate_xmin(ref_pl)
ref_pl$xmin <- est
bs <- bootstrap_p(ref_pl, threads = 3)
classes <- fread('output/classes.csv')
sum(classes$lines)
ggplot.ccdf(classes$lines)
ggplot.ccdf(classes$subclasses)
ggplot.ccdf(classes$subclasses+1)
ggplot.ccdf(classes$lines)
subclasses_pl <- displ$new(classes$subclasses+1)
est <- estimate_xmin(subclasses_pl)
ggplot.ccdf(classes$subclasses+1)
subclasses_pl$xmin<-est
bs <- bootstrap_p(subclasses_pl, threads = 3)
classes <- fread('output/classes.csv')
ggplot.ccdf(classes$subclasses+1)
classes <- fread('output/classes.csv')
ggplot.ccdf(classes$subclasses+1)
summary(classes$subclasses)
ggplot.ccdf(classes$lines)
class_size_pl<-displ$new(classes$lines)
class_size_pl$xmin <- estimate_xmin(class_size_pl)
bs <- bootstrap_p(class_size_pl)
bs <- bootstrap_p(class_size_pl, threads = 2)
classes <- fread('output/classes.csv')
ggplot.ccdf(classes$subclasses+1)
summary(classes$subclasses)
subclasses_pl <- displ$new(classes$subclasses+1)
est <- estimate_xmin(subclasses_pl)
subclasses_pl$xmin<-est
bs <- bootstrap_p(subclasses_pl, threads = 3)
subclasses_pl$xmin<-6
subclasses_pl$pars<-estimate_pars(subclasses_pl)
bs <- bootstrap_p(subclasses_pl, threads = 3)
ggplot.ccdf(classes$lines)
class_size_pl <- displ$new(classes$lines)
est <- estimate_xmin(class_size_pl)
class_size_pl$xmin<-est
bs <- bootstrap_p(class_size_pl)
bs <- bootstrap_p(class_size_pl, threads = 3)
commits<-fread('output/commits.csv')
commit_size_pl <- displ$new(commits$change_size)
est <- estimate_xmin(commit_size_pl)
commit_size_pl$xmin <- est
bs <- bootstrap_p(commit_size_pl, threads = 3)
methods<-fread('output/methods.csv')
ref_pl <- displ$new(methods$ref_count+1)
ref_pl$xmin <- estimate_xmin(ref_pl)
bs <- bootstrap_p(ref_pl)
bs <- bootstrap_p(ref_pl, threads = 3)
ggplot.ccdf(methods$ref_count+1)
methods<-fread('output/methods.csv')
ref_pl <- displ$new(methods$ref_count+1)
ref_pl$xmin <- estimate_xmin(ref_pl)
bs <- bootstrap_p(ref_pl, threads = 3)
methods<-fread('output/methods.csv')
ref_pl <- displ$new(methods$ref_count+1)
ref_pl$xmin <- estimate_xmin(ref_pl)
bs <- bootstrap_p(ref_pl, threads = 3)
methods<-fread('output/methods.csv')
ref_pl <- displ$new(methods$ref_count+1)
ref_pl$xmin <- estimate_xmin(ref_pl)
bs <- bootstrap_p(ref_pl, threads = 3)
classes<-fread('output/classes.csv')
class_size_pl <- displ$new(classes$lines)
class_size_pl$xmin<- estimate_xmin(class_size_pl)
bs <- bootstrap_p(class_size_pl, threads = 3)
source('E:/Development/Python3/Codevo3/analysis.R')
methods <- fread('output/methods.csv')
test_power_law(methods$ref_count+1)
methods <- fread('output/methods.csv')
test_power_law(methods$ref_count+1)
commits <- fread('output/commits.csv')
