install.packages("RMongo", lib="/usr/lib/R/site-library")
?install
help(install)
install.packages("RMongo", lib="/usr/lib/R/site-library")
help(install.packages)
.libPaths
.LibPaths
.Library
.Library.site
help(install.packages)
.libPaths()
install.packages("RMongo")
install.packages("RMongo")
?mtcars
typeof(mtcars$cyl)
?as.factor
?table
x <- factor(c("a", "b", "b", "a"))
x
table(x)
library(ggplot2)
type(mtcars)
typeof(mtcars)
is.object(mtcars)
isS4(mtcars)
class(mtcars)
qplot(cylinder, mpg, data=mtcars, geom=c('boxplot', 'jitter'), fill=cylinder, main='box plots with superimposed data points', xlab='number of cylinders', ylab='miles per gallon')
mtcars$cylinder <- as.factor(mtcars$cyl)
qplot(cylinder, mpg, data=mtcars, geom=c('boxplot', 'jitter'), fill=cylinder, main='box plots with superimposed data points', xlab='number of cylinders', ylab='miles per gallon')
table(mtcars)
nrow(mtcars)
ncol(mtcars)
names(mtcars)
mtcars$cyl
mtcars$mpg
?qplot
mtcars$am
table(mtcars$cylinder)
labels(mtcars$cylinder)
transmission <- factor(mtcars$am, levels=c(0, 1),
labels=c("Automatic", "Manual"))
labels(transmission)
attr(transmission)
attributes(transmission)
?factor
qplot(wt,mpg, data=mtcars,
color=transmission, shape=transmission,
geom=c("point", "smooth"),
method="lm", formula=y~x,
xlab="Weight", ylab="Miles Per Gallon",
main="Regression Example")
qplot(wt,mpg, data=mtcars, method="lm", formula=y~x, xlab="Weight", ylab="Miles Per Gallon",main="Regression Example")
qplot(wt,mpg, data=mtcars, methogeom=c("point", "smooth"),d="lm", formula=y~x, xlab="Weight", ylab="Miles Per Gallon",main="Regression Example")
qplot(wt,mpg, data=mtcars, geom=c("point", "smooth"), method="lm", formula=y~x, xlab="Weight", ylab="Miles Per Gallon",main="Regression Example")
qplot(wt,mpg, data=mtcars, geom=c(smooth"), method="lm", formula=y~x, xlab="Weight", ylab="Miles Per Gallon",main="Regression Example")
qplot(wt,mpg, data=mtcars, geom=c("smooth"), method="lm", formula=y~x, xlab="Weight", ylab="Miles Per Gallon",main="Regression Example")
library(ggplot2)
qplot(wt,mpg, data=mtcars, geom=c("smooth"), method="lm", formula=y~x, xlab="Weight", ylab="Miles Per Gallon",main="Regression Example")
qplot(wt,mpg, data=mtcars, geom=c("smooth", "point"), method="lm", formula=y~x, xlab="Weight", ylab="Miles Per Gallon",main="Regression Example")
?lm
qplot(wt,mpg, data=mtcars, geom=c("smooth", "point"), method="lm", formula=y~x, xlab="Weight", ylab="Miles Per Gallon",main="Regression Example", color=transmission)
transmission <- factor(mtcars$am, levels=c(0, 1),
labels=c("Automatic", "Manual"))
qplot(wt,mpg, data=mtcars, geom=c("smooth", "point"), method="lm", formula=y~x, xlab="Weight", ylab="Miles Per Gallon",main="Regression Example", color=transmission)
cylinder <- as.factor(mtcars$cyl)
qplot(cylinder, mpg, data=mtcars, geom=c('boxplot', 'jitter'), fill=cylinder, main='box plots with superimposed data points', xlab='number of cylinders', ylab='miles per gallon')
cylind <- as.factor(mtcars$cyl)
qplot(cylind, mpg, data=mtcars, geom=c('boxplot', 'jitter'), fill=cylinder, main='box plots with superimposed data points', xlab='number of cylinders', ylab='miles per gallon')
qplot(cylind, mpg, data=mtcars, geom=c('boxplot', 'point'), fill=cylinder, main='box plots with superimposed data points', xlab='number of cylinders', ylab='miles per gallon')
cyl <- factor(mtcars$cyl, levels=c(4, 6, 8),
labels=c("4 cylinders", "6 cylinders", "8 cylinders"))
factor(mtcars$am, levels=c(0, 1),
labels=c("Automatic", "Manual"))
transmission <- factor(mtcars$am, levels=c(0, 1),
labels=c("Automatic", "Manual"))
qplot(wt,mpg, data=mtcars, facets=am~cyl, size=hp)
mtcar$am <- factor(mtcars$am, levels=c(0, 1),
labels=c("Automatic", "Manual"))
mtcars$am <- factor(mtcars$am, levels=c(0, 1),
labels=c("Automatic", "Manual"))
mtcars$cyl <- factor(mtcars$cyl, levels=c(4, 6, 8),
labels=c("4 cylinders", "6 cylinders", "8 cylinders"))
qplot(wt,mpg, data=mtcars, facets=am~cyl, size=hp)
data(singer, package="lattice")
qplot(height, data=singer, geom=c("density"),
facets=voice.part~., fill=voice.part)
qplot(height, data=singer, geom=c("density"),
facets=.~voice.part, fill=voice.part)
qplot(disp,mpg,data=mtcars,col= as.factor(cyl))
qplot(disp,mpg,data=mtcars,col= cyl)
qplot(disp,mpg,data=mtcars,col= as.factor(cyl))
qplot(disp,mpg,data=mtcars,col= cyl)
qplot(disp,mpg,data=mtcars,shape=cyl)
qplot(disp,mpg,data=mtcars,size=cyl)
.libPaths()
install.packages(c("ggplot2", "data.table", "RMongo"))
install.packages("rmongodb")
library(rmongodb)
mongo <- mongo.create(db='evolution')
references <- mongo.find.one(mongo, 'evolution.references', '{_id: "c07b777533cdbdfe4042258dbf44f2d9d51e3bc0"}')
references <- mongo.find.one(mongo, 'evolution.references', '{"_id": "c07b777533cdbdfe4042258dbf44f2d9d51e3bc0"}')
names(references)
class(references)
references
load("~/Code/Python3/Codevo3/analysis.R")
setwd("~/Code/Python3/Codevo3")
df <- read.csv('classes.csv')
source('/mnt/Home/KuaiPan/Research/EvolutionSimulation/analysis/plot.ccdf.R')
plot.ccdf(df$lines)
plot.ccdf(df$subclasses)
plot.ccdf(df$lines)
df <- read.csv('output/classes.csv')
plot.ccdf(df$subclasses)
plot.ccdf(df$lines)
source('~/Code/Python3/Codevo3/analysis.R')
?readLines
df <- file('.gitignore', 'r')
readLines(df, n=7)
readLines(df, n=1)
df <- file('.gitignore', 'r')
readLines(df, n=1)
readLines(df, n=1) == NULL
is.character(readLines(df, n=1))
length(readLines(df, n=1))
length("")
length("a")
min_fitness <- get_min_fitness(100000)
source('~/Code/Python3/Codevo3/analysis.R')
min_fitness <- get_min_fitness(100000)
names(min_fitness)
library(ggplot2)
qplot(step, fitness, data=min_fitness)
expression('title'^2)
qplot(step, fitness, data=min_fitness, ylab=expression('f'[2]))
qplot(step, fitness, data=min_fitness, ylab=expression('f'['min']'(S)'))
?expression
qplot(step, fitness, data=min_fitness, ylab=expression('hi'[5]*'there'[6]^8*'you'[2]))
qplot(step, fitness, data=min_fitness, ylab=expression('f'['min']*'(S)'))
qplot(step, fitness, data=min_fitness, ylab=expression('f'['min']*'(S)'), xlab='S')
source('~/Code/Python3/Codevo3/analysis.R')
steps <- fread('~/steps.csv')
qplot(1:nrow(steps), min_fitness, data=steps)
max(steps[200000:400000])
max(steps[200000:400000]$min_fitness)
max(steps[400000:600000]$min_fitness)
max(steps[600000:800000]$min_fitness)
max(steps[800000:1000000]$min_fitness)
?lm
ctl <- c(4.17,5.58,5.18,6.11,4.50,4.61,5.17,4.53,5.33,5.14)
trt <- c(4.81,4.17,4.41,3.59,5.87,3.83,6.03,4.89,4.32,4.69)
group <- gl(2, 10, 20, labels = c("Ctl","Trt"))
weight <- c(ctl, trt)
lm(weight ~ group)
